/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    games: Game;
    emails: Email;
    teamMembers: TeamMember;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    games: GamesSelect<false> | GamesSelect<true>;
    emails: EmailsSelect<false> | EmailsSelect<true>;
    teamMembers: TeamMembersSelect<false> | TeamMembersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    landingPage: LandingPage;
    gamesPage: GamesPage;
    aboutPage: AboutPage;
  };
  globalsSelect: {
    landingPage: LandingPageSelect<false> | LandingPageSelect<true>;
    gamesPage: GamesPageSelect<false> | GamesPageSelect<true>;
    aboutPage: AboutPageSelect<false> | AboutPageSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "games".
 */
export interface Game {
  id: number;
  /**
   * Lorem ipsum
   */
  title: string;
  /**
   * Lorem ipsum
   */
  description?: string | null;
  /**
   * Lorem ipsum
   */
  visits: number;
  /**
   * Lorem ipsum
   */
  players: number;
  /**
   * Lorem ipsum
   */
  href: string;
  /**
   * Lorem ipsum
   */
  image: number | Media;
  /**
   * Lorem ipsum
   */
  place?: string | null;
  /**
   * This will replace these values with the latest data from Roblox's API
   */
  latestData?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emails".
 */
export interface Email {
  id: number;
  /**
   * Lorem ipsum
   */
  type: string;
  /**
   * Lorem ipsum
   */
  email: string;
  /**
   * Lorem ipsum
   */
  message: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teamMembers".
 */
export interface TeamMember {
  id: number;
  /**
   * Lorem ipsum
   */
  photo: number | Media;
  /**
   * Lorem ipsum
   */
  name: string;
  /**
   * Lorem ipsum
   */
  position: string;
  /**
   * Lorem ipsum
   */
  linkedIn?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'games';
        value: number | Game;
      } | null)
    | ({
        relationTo: 'emails';
        value: number | Email;
      } | null)
    | ({
        relationTo: 'teamMembers';
        value: number | TeamMember;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "games_select".
 */
export interface GamesSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  visits?: T;
  players?: T;
  href?: T;
  image?: T;
  place?: T;
  latestData?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "emails_select".
 */
export interface EmailsSelect<T extends boolean = true> {
  type?: T;
  email?: T;
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "teamMembers_select".
 */
export interface TeamMembersSelect<T extends boolean = true> {
  photo?: T;
  name?: T;
  position?: T;
  linkedIn?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "landingPage".
 */
export interface LandingPage {
  id: number;
  hero: {
    /**
     * Lorem ipsum
     */
    title: string;
    /**
     * Lorem ipsum
     */
    subtitle: string;
    /**
     * Lorem ipsum
     */
    sessions: string;
    /**
     * Lorem ipsum
     */
    players: string;
    /**
     * Lorem ipsum
     */
    hours: string;
    /**
     * Lorem ipsum
     */
    backgroundVideo?: (number | null) | Media;
  };
  portfolio: {
    /**
     * Lorem ipsum
     */
    title: string;
    /**
     * Lorem ipsum
     */
    items?:
      | {
          /**
           * Lorem ipsum
           */
          href: string;
          /**
           * Lorem ipsum
           */
          image: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  hits: {
    /**
     * Lorem ipsum
     */
    title: string;
  };
  cases: {
    /**
     * Lorem ipsum
     */
    title: string;
  };
  buyout: {
    /**
     * Lorem ipsum
     */
    title: string;
    /**
     * Lorem ipsum
     */
    items?:
      | {
          /**
           * Lorem ipsum
           */
          name: string;
          /**
           * Lorem ipsum
           */
          description: string;
          /**
           * Lorem ipsum
           */
          icon: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  blog: {
    /**
     * Lorem ipsum
     */
    title: string;
    /**
     * Lorem ipsum
     */
    items?:
      | {
          /**
           * Lorem ipsum
           */
          name: string;
          /**
           * Lorem ipsum
           */
          description: string;
          /**
           * Lorem ipsum
           */
          href: string;
          /**
           * Lorem ipsum
           */
          image: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  ticker?: {
    /**
     * Lorem ipsum
     */
    items?:
      | {
          /**
           * Lorem ipsum
           */
          text: string;
          /**
           * Lorem ipsum
           */
          icon: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  contacts: {
    /**
     * Lorem ipsum
     */
    title: string;
    /**
     * Lorem ipsum
     */
    email: string;
    /**
     * Lorem ipsum
     */
    text: string;
    /**
     * Lorem ipsum
     */
    buttonText: string;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gamesPage".
 */
export interface GamesPage {
  id: number;
  hero?: {
    /**
     * Lorem ipsum
     */
    background?: (number | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutPage".
 */
export interface AboutPage {
  id: number;
  hero?: {
    /**
     * Lorem ipsum
     */
    background?: (number | null) | Media;
    /**
     * Lorem ipsum
     */
    title?: string | null;
    /**
     * Lorem ipsum
     */
    yearsValue?: string | null;
    /**
     * Lorem ipsum
     */
    yearsText?: string | null;
    /**
     * Lorem ipsum
     */
    membersValue?: string | null;
    /**
     * Lorem ipsum
     */
    membersText?: string | null;
  };
  story?: {
    /**
     * Lorem ipsum
     */
    title?: string | null;
    /**
     * Lorem ipsum
     */
    subtitle?: string | null;
    /**
     * Lorem ipsum
     */
    text?: string | null;
  };
  mission?: {
    /**
     * Lorem ipsum
     */
    title?: string | null;
    /**
     * Lorem ipsum
     */
    subtitle?: string | null;
    /**
     * Lorem ipsum
     */
    text?: string | null;
  };
  values?: {
    /**
     * Lorem ipsum
     */
    title?: string | null;
    /**
     * Lorem ipsum
     */
    items?:
      | {
          /**
           * Lorem ipsum
           */
          name?: string | null;
          /**
           * Lorem ipsum
           */
          description?: string | null;
          /**
           * Lorem ipsum
           */
          icon?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  investors?: {
    /**
     * Lorem ipsum
     */
    title?: string | null;
    /**
     * Lorem ipsum
     */
    items?:
      | {
          /**
           * Lorem ipsum
           */
          href?: string | null;
          /**
           * Lorem ipsum
           */
          image?: (number | null) | Media;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "landingPage_select".
 */
export interface LandingPageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        title?: T;
        subtitle?: T;
        sessions?: T;
        players?: T;
        hours?: T;
        backgroundVideo?: T;
      };
  portfolio?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              href?: T;
              image?: T;
              id?: T;
            };
      };
  hits?:
    | T
    | {
        title?: T;
      };
  cases?:
    | T
    | {
        title?: T;
      };
  buyout?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              name?: T;
              description?: T;
              icon?: T;
              id?: T;
            };
      };
  blog?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              name?: T;
              description?: T;
              href?: T;
              image?: T;
              id?: T;
            };
      };
  ticker?:
    | T
    | {
        items?:
          | T
          | {
              text?: T;
              icon?: T;
              id?: T;
            };
      };
  contacts?:
    | T
    | {
        title?: T;
        email?: T;
        text?: T;
        buttonText?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "gamesPage_select".
 */
export interface GamesPageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        background?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aboutPage_select".
 */
export interface AboutPageSelect<T extends boolean = true> {
  hero?:
    | T
    | {
        background?: T;
        title?: T;
        yearsValue?: T;
        yearsText?: T;
        membersValue?: T;
        membersText?: T;
      };
  story?:
    | T
    | {
        title?: T;
        subtitle?: T;
        text?: T;
      };
  mission?:
    | T
    | {
        title?: T;
        subtitle?: T;
        text?: T;
      };
  values?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              name?: T;
              description?: T;
              icon?: T;
              id?: T;
            };
      };
  investors?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              href?: T;
              image?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}